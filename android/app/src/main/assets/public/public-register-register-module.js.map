{"version":3,"sources":["webpack:///./src/app/public/register/register.module.ts","webpack:///./src/app/public/register/register.page.html","webpack:///./src/app/public/register/register.page.scss","webpack:///./src/app/public/register/register.page.ts"],"names":[],"mappings":"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","file":"public-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Register</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"error-message\\\" *ngIf=\\\"!this.authService.validate(this.registerForm, 'name', this.error)\\\">\\r\\n      <span class=\\\"ion-margin-start\\\">\\r\\n        {{error['name']}}\\r\\n      </span>\\r\\n    </div>\\r\\n    <!--Ionic 4 bug: Custom validators must be styled like this-->\\r\\n    <ion-item [class.ion-invalid]=\\\"email.hasError('emailAvailable')\\\">\\r\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n        <!--Show spinner when checking mail-->\\r\\n        <ion-spinner *ngIf=\\\"email.status==='PENDING'\\\" color=\\\"primary\\\"></ion-spinner>\\r\\n      </ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"error-message\\\" *ngIf=\\\"!this.authService.validate(this.registerForm, 'email', this.error)\\\">\\r\\n      <span class=\\\"ion-margin-start\\\">\\r\\n          {{error['email']}}\\r\\n          <a (click)=\\\"resetPassword()\\\" *ngIf=\\\"error['email'].indexOf('Email already') >= 0\\\">Forgot Password?</a>\\r\\n      </span>\\r\\n    </div>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"error-message\\\" *ngIf=\\\"!this.authService.validate(this.registerForm, 'password', this.error)\\\">\\r\\n      <span class=\\\"ion-margin-start\\\">\\r\\n        {{error['password']}}\\r\\n      </span>\\r\\n    </div>\\r\\n    <!-- TODO: Handle already saved browser credentials -->\\r\\n    <ion-button margin-top type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" expand=\\\"block\\\">\\r\\n      Register\\r\\n    <ion-spinner *ngIf=\\\"registering\\\" color=\\\"white\\\"></ion-spinner>\\r\\n    </ion-button>\\r\\n    <ion-item>\\r\\n      <p>Already registered? <a routerLink=\\\"../login/\\\" routerDirection=\\\"backward\\\">Login!</a></p>\\r\\n    </ion-item>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","module.exports = \"div.error-message {\\n  padding-top: 0.5em;\\n  color: red; }\\n  div.error-message a {\\n    color: var(--ion-color-primary);\\n    -webkit-text-decoration-style: none;\\n            text-decoration-style: none; }\\n  ion-input, ion-button {\\n  position: relative; }\\n  ion-input ion-spinner, ion-button ion-spinner {\\n    position: absolute;\\n    right: 1em; }\\n  form {\\n  margin-top: 50vh;\\n  -webkit-transform: translateY(-75%);\\n          transform: translateY(-75%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL3JlZ2lzdGVyL0M6XFxVc2Vyc1xcTW9zaHVcXERlc2t0b3BcXENhcnBvb2xcXENhcnBvb2wvc3JjXFxhcHBcXHB1YmxpY1xccmVnaXN0ZXJcXHJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtFQUNsQixVQUFVLEVBQUE7RUFGZDtJQUlRLCtCQUErQjtJQUMvQixtQ0FBMkI7WUFBM0IsMkJBQTJCLEVBQUE7RUFHbkM7RUFDSSxrQkFBa0IsRUFBQTtFQUR0QjtJQUdRLGtCQUFrQjtJQUNsQixVQUFVLEVBQUE7RUFHbEI7RUFDSSxnQkFBZ0I7RUFDaEIsbUNBQTJCO1VBQTNCLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHVibGljL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdi5lcnJvci1tZXNzYWdlIHtcclxuICAgIHBhZGRpbmctdG9wOiAwLjVlbTtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbi1zdHlsZTogbm9uZTtcclxuICAgIH1cclxufVxyXG5pb24taW5wdXQsIGlvbi1idXR0b24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaW9uLXNwaW5uZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogMWVtO1xyXG4gICAgfVxyXG59XHJcbmZvcm0ge1xyXG4gICAgbWFyZ2luLXRvcDogNTB2aDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzUlKTtcclxufSJdfQ== */\"","import { AuthenticationService } from './../../services/authentication.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl } from '@angular/forms';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit, OnDestroy {\r\n\r\n  public registerForm: FormGroup;\r\n  // For ease in reference\r\n  public error: Object;\r\n  public registering = false;\r\n\r\n  constructor(\r\n    public authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      email: [this.authService.passingEmail,\r\n      [Validators.required, Validators.email], this.authService.emailAvailable.bind(this.authService)],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n    this.error = {\r\n      name: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authService = null;\r\n    this.formBuilder = null;\r\n    this.error = null;\r\n    this.registerForm = null;\r\n  }\r\n\r\n  async register() {\r\n    // If user gets past the initial checks\r\n    if (!this.registerForm.valid) return;\r\n    // If outdated version\r\n    // if (!this.db.usable) {\r\n    //   this.alertService.error(this.db.outdatedError);\r\n    //   return;\r\n    // }\r\n    this.registering = true;\r\n    // Register\r\n    try {\r\n      await this.authService.register(this.name.value, this.email.value, this.password.value);\r\n      this.registering = false;\r\n    } catch (err) {\r\n      this.registering = false;\r\n      this.alertService.error(err);\r\n      return;\r\n    }\r\n    // Now safe to go forward - on to the info page\r\n    this.authService.authState.next(true);\r\n    this.registerForm.reset();\r\n  }\r\n\r\n  resetPassword() {\r\n    this.authService.resetPassword(this.email.value);\r\n  }\r\n\r\n  // Getters\r\n  get name(): AbstractControl {\r\n    return this.registerForm.get('name');\r\n  }\r\n  get email(): AbstractControl {\r\n    return this.registerForm.get('email');\r\n  }\r\n  get password(): AbstractControl {\r\n    return this.registerForm.get('password');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}