{"version":3,"sources":["webpack:///./src/app/public/login/login.module.ts","webpack:///./src/app/public/login/login.page.html","webpack:///./src/app/public/login/login.page.scss","webpack:///./src/app/public/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B5B,w1BAAw1B,aAAa,+sBAA+sB,uLAAuL,gBAAgB,2b;;;;;;;;;;;ACA3vD,qCAAqC,uBAAuB,eAAe,EAAE,yBAAyB,sCAAsC,0CAA0C,0CAA0C,EAAE,2BAA2B,uBAAuB,EAAE,mDAAmD,yBAAyB,iBAAiB,EAAE,UAAU,qBAAqB,wCAAwC,wCAAwC,EAAE,+CAA+C,+jC;;;;;;;;;;;;;;;;;;;;;ACArc;AACnB;AACwB;AACjB;AACN;AAO9D;IAOE,mBACS,WAAkC,EACjC,WAAwB,EACxB,EAAmB,EACnB,YAA0B;QAH3B,gBAAW,GAAX,WAAW,CAAuB;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAiB;QACnB,iBAAY,GAAZ,YAAY,CAAc;QAN7B,YAAO,GAAG,KAAK,CAAC;QAChB,gBAAW,GAAG,KAAK,CAAC;IAMrB,CAAC;IAEP,4BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IACJ,CAAC;IAED,+BAAW,GAAX;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,yBAAK,GAAL;QAAA,iBAqCC;QApCC,uCAAuC;QACvC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK;YAAE,OAAO;QAClC,sBAAsB;QACtB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;YAC/C,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC5D,IAAI,CAAC;YACJ,iBAAiB;YACjB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,gBAAgB;YAChB,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;YAC1D,KAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;YACrD,iBAAiB;YACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,EAC7C,KAAI,CAAC,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC1C,kBAAkB;gBAClB,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;gBACV,gCAAgC;gBAChC,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE;oBACpB,2CAA2C;oBAC3C,KAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACxB,kBAAkB;oBAClB,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,kBAAkB;YAClB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAGD,sBAAI,4BAAK;QADT,UAAU;aACV;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;;;OAAA;IACD,sBAAI,+BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAnFU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,gGAAgC;;SAEjC,CAAC;+EASsB,sFAAqB;YACpB,0DAAW;YACpB,iFAAe;YACL,2EAAY;OAXzB,SAAS,CAoFrB;IAAD,gBAAC;CAAA;AApFqB","file":"public-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>FAST CarPool</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content >\\r\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n    <!-- Ionic 4 bug: Custom validators must be styled like this -->\\r\\n    <ion-item [class.ion-invalid]=\\\"email.hasError('emailExists')\\\">\\r\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n        <!-- Show spinner when checking mail -->\\r\\n        <ion-spinner *ngIf=\\\"email.status==='PENDING'\\\" color=\\\"primary\\\"></ion-spinner>\\r\\n      </ion-input>\\r\\n    </ion-item>\\r\\n    <!-- Email Errors -->\\r\\n    <div class=\\\"error-message\\\" *ngIf=\\\"!this.authService.validate(this.loginForm, 'email', this.error)\\\">\\r\\n      <span class=\\\"ion-margin-start\\\">\\r\\n        {{error.email}}\\r\\n        <!-- If no such email exists - Pass email if clicked-->\\r\\n        <a (click)=\\\"authService.passingEmail = email.value\\\"\\r\\n        routerLink=\\\"../register/\\\" routerDirection=\\\"forward\\\" *ngIf=\\\"error.email.indexOf('No') >= 0\\\">Sign Up!</a>\\r\\n      </span>\\r\\n    </div>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"error-message\\\" *ngIf=\\\"!this.authService.validate(this.loginForm, 'password', this.error) || loginFailed\\\">\\r\\n      <span class=\\\"ion-margin-start\\\">\\r\\n        <!-- If invalid password -->\\r\\n        <span *ngIf=\\\"this.loginFailed; else passwordError\\\">\\r\\n          Password is invalid. <a (click)=\\\"resetPassword()\\\">Forgot Password?</a>\\r\\n        </span>\\r\\n        <ng-template #passwordError>\\r\\n          {{error.password}}\\r\\n        </ng-template>\\r\\n      </span>\\r\\n    </div>\\r\\n    <ion-button margin-top type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" expand=\\\"block\\\">\\r\\n      Login\\r\\n      <ion-spinner *ngIf=\\\"logging\\\" color=\\\"white\\\"></ion-spinner>\\r\\n    </ion-button>\\r\\n    <ion-item>\\r\\n      <p>Not registered? <a routerLink=\\\"../register/\\\" routerDirection=\\\"forward\\\">Create an account!</a></p>\\r\\n    </ion-item>\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \"div.error-message {\\n  padding-top: 0.5em;\\n  color: red; }\\n  div.error-message a {\\n    color: var(--ion-color-primary);\\n    -webkit-text-decoration-style: none;\\n            text-decoration-style: none; }\\n  ion-input, ion-button {\\n  position: relative; }\\n  ion-input ion-spinner, ion-button ion-spinner {\\n    position: absolute;\\n    right: 1em; }\\n  form {\\n  margin-top: 50vh;\\n  -webkit-transform: translateY(-75%);\\n          transform: translateY(-75%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL2xvZ2luL0M6XFxVc2Vyc1xcTW9zaHVcXERlc2t0b3BcXENhcnBvb2xcXENhcnBvb2wvc3JjXFxhcHBcXHB1YmxpY1xcbG9naW5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtFQUNsQixVQUFVLEVBQUE7RUFGZDtJQUlRLCtCQUErQjtJQUMvQixtQ0FBMkI7WUFBM0IsMkJBQTJCLEVBQUE7RUFHbkM7RUFDSSxrQkFBa0IsRUFBQTtFQUR0QjtJQUdRLGtCQUFrQjtJQUNsQixVQUFVLEVBQUE7RUFHbEI7RUFDSSxnQkFBZ0I7RUFDaEIsbUNBQTJCO1VBQTNCLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHVibGljL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdi5lcnJvci1tZXNzYWdlIHtcclxuICAgIHBhZGRpbmctdG9wOiAwLjVlbTtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbi1zdHlsZTogbm9uZTtcclxuICAgIH1cclxufVxyXG5pb24taW5wdXQsIGlvbi1idXR0b24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaW9uLXNwaW5uZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogMWVtO1xyXG4gICAgfVxyXG59XHJcbmZvcm0ge1xyXG4gICAgbWFyZ2luLXRvcDogNTB2aDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNzUlKTtcclxufSJdfQ== */\"","import { AuthenticationService } from './../../services/authentication.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl } from '@angular/forms';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit, OnDestroy {\r\n\r\n  public loginForm: FormGroup;\r\n  // For ease in reference\r\n  public error: any;\r\n  public logging = false;\r\n  public loginFailed = false;\r\n  constructor(\r\n    public authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private db: DatabaseService,\r\n    private alertService: AlertService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email], this.authService.emailExists.bind(this.authService)],\r\n      password: ['', [Validators.required]]\r\n    });\r\n    this.error = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authService = null;\r\n    this.db = null;\r\n    this.formBuilder = null;\r\n    this.loginForm = null;\r\n    this.error = null;\r\n  }\r\n\r\n  login() {\r\n    // If user gets past the initial checks\r\n    if (!this.loginForm.valid) return;\r\n    // If outdated version\r\n    if (!this.db.usable) {\r\n      this.alertService.error(this.db.outdatedError);\r\n      return;\r\n    }\r\n    this.logging = true;\r\n    this.authService.login(this.email.value, this.password.value)\r\n    .then(() => {\r\n      // Login complete\r\n      this.loginFailed = false;\r\n      this.logging = false;\r\n      // Set user link\r\n      this.db.userLink.name = this.authService.user.displayName;\r\n      this.db.userLink.email = this.authService.user.email;\r\n      // Load user data\r\n      this.alertService.load('Loading your data...',\r\n      this.db.getUserData(this.email.value)).then(() => {\r\n        // Haye ho forward\r\n        this.authService.authState.next(true);\r\n        this.loginForm.reset();\r\n      }).catch(err => {\r\n        // If registration not completed\r\n        if (err.code === 601) {\r\n          // Acknowledge registration is not complete\r\n          this.db.userData = null;\r\n          // Haye ho forward\r\n          this.authService.authState.next(true);\r\n        }\r\n      });\r\n    }).catch(err => {\r\n      // Password failed\r\n      this.loginFailed = true;\r\n      this.logging = false;\r\n    });\r\n  }\r\n\r\n  resetPassword() {\r\n    this.authService.resetPassword(this.email.value);\r\n    this.loginFailed = false;\r\n  }\r\n\r\n  // Getters\r\n  get email(): AbstractControl {\r\n    return this.loginForm.get('email');\r\n  }\r\n  get password(): AbstractControl {\r\n    return this.loginForm.get('password');\r\n  }\r\n}\r\n"],"sourceRoot":""}